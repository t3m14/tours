resolver 127.0.0.11 valid=30s;

# HTTP редирект на HTTPS
server {
    listen 80;
    server_name a-tour74.ru www.a-tour74.ru;

    # Перенаправление для Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # ✅ РАЗРЕШАЕМ HTTP ДЛЯ BACKEND API (для отладки CORS)
    location /backend/ {
        set $upstream_backend web:8000;
        proxy_pass http://$upstream_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # ✅ CORS ЗАГОЛОВКИ ДЛЯ HTTP
        add_header 'Access-Control-Allow-Origin' 'a-tour74.ru' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        add_header 'Access-Control-Max-Age' 86400 always;

        # ✅ ОБРАБОТКА OPTIONS (PREFLIGHT) ЗАПРОСОВ
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'a-tour74.ru' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 86400;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        add_header X-Debug-Location "backend-api-http" always;
    }

    # Редирект всего остального на HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS конфигурация
server {
    listen 443 ssl;
    http2 on;
    server_name a-tour74.ru www.a-tour74.ru;
    charset utf-8;
    client_max_body_size 100M;

    # SSL сертификаты
    ssl_certificate /etc/letsencrypt/live/a-tour74.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/a-tour74.ru/privkey.pem;

    # SSL параметры безопасности
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # SSL оптимизация
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/live/a-tour74.ru/chain.pem;

    # Логи
    access_log /var/log/nginx/access_ssl.log;
    error_log /var/log/nginx/error_ssl.log;

    # Редирект с www
    if ($host = www.a-tour74.ru) {
        return 301 https://a-tour74.ru$request_uri;
    }

    # КРИТИЧЕСКИ ВАЖНО: Модификатор ^~ делает location более приоритетным чем regex
    location ^~ /backend/v1/static/ {
        set $upstream_backend web:8000;
        rewrite ^/backend/v1(.*)$ $1 break;
        proxy_pass http://$upstream_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Debug-Location "rewrite-match" always;
    }

    # ✅ Backend API С ПОЛНОЙ CORS ПОДДЕРЖКОЙ
    location /backend/ {
        set $upstream_backend backend.internal:8000;
        allow 172.0.0.0/8;    # Docker network
        allow 192.168.0.0/16; # Локальная сеть
        deny all;
        proxy_pass http://$upstream_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # ✅ ПОЛНЫЕ CORS ЗАГОЛОВКИ ДЛЯ ВСЕХ ОТВЕТОВ
        add_header 'Access-Control-Allow-Origin' 'a-tour74.ru' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH, HEAD' always;
        add_header 'Access-Control-Allow-Headers' 'Accept,Accept-Language,Content-Language,Content-Type,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Range,Authorization,X-CSRF-Token' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range,X-Total-Count' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Max-Age' 86400 always;

        # ✅ КРИТИЧЕСКИ ВАЖНО: ОБРАБОТКА PREFLIGHT OPTIONS ЗАПРОСОВ
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'a-tour74.ru' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH, HEAD' always;
            add_header 'Access-Control-Allow-Headers' 'Accept,Accept-Language,Content-Language,Content-Type,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Range,Authorization,X-CSRF-Token' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Max-Age' 86400 always;
            add_header 'Content-Type' 'text/plain; charset=utf-8' always;
            add_header 'Content-Length' 0 always;
            return 204;
        }

        add_header X-Debug-Location "backend-api-https" always;
    }

    location /static/ {
        set $upstream_backend web:8000;
        proxy_pass http://$upstream_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Debug-Location "direct-static" always;
    }

    location /api/ {
        set $upstream_frontend frontend:3000;
        proxy_pass http://$upstream_frontend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ✅ WebSocket С CORS ПОДДЕРЖКОЙ
    location /ws/ {
        set $upstream_backend web:8000;
        proxy_pass http://$upstream_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS для WebSocket
        add_header 'Access-Control-Allow-Origin' 'a-tour74.ru' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
    }

    location /_nuxt/ {
        set $upstream_frontend frontend:3000;
        proxy_pass http://$upstream_frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    location /health {
        allow 127.0.0.1;
        allow 37.230.112.207;
        allow 172.0.0.0/8;
        deny all;
        set $upstream_backend web:8000;
        proxy_pass http://$upstream_backend/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /docs {
        set $upstream_backend web:8000;
        proxy_pass http://$upstream_backend/docs;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /redoc {
        set $upstream_backend web:8000;
        proxy_pass http://$upstream_backend/redoc;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /openapi.json {
        set $upstream_backend web:8000;
        proxy_pass http://$upstream_backend/openapi.json;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /sitemap {
        set $upstream_backend web:8000;
        proxy_pass http://$upstream_backend/sitemap;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /robots.txt {
        set $upstream_backend web:8000;
        proxy_pass http://$upstream_backend/robots.txt;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Regex location для остальных статических файлов (НЕ backend)
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|webp|woff|woff2|ttf|eot)$ {
        set $upstream_frontend frontend:3000;
        proxy_pass http://$upstream_frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Debug-Location "regex-static" always;
    }

    location / {
        set $upstream_frontend frontend:3000;
        proxy_pass http://$upstream_frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    server_tokens off;
}

# Fallback server
server {
    listen 80 default_server;
    listen 443 ssl default_server;
    server_name _;

    # Dummy SSL certificates для default server
    ssl_certificate /etc/letsencrypt/live/a-tour74.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/a-tour74.ru/privkey.pem;

    return 444;
}